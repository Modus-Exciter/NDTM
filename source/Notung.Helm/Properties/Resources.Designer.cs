//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Notung.Helm.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Notung.Helm.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string CANCEL {
            get {
                return ResourceManager.GetString("CANCEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method cannot be called in recieving process.
        /// </summary>
        internal static string COPY_DATA_SEND_RECIEVE {
            get {
                return ResourceManager.GetString("COPY_DATA_SEND_RECIEVE", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap DefaultSplash {
            get {
                object obj = ResourceManager.GetObject("DefaultSplash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library failed to load. Unable to enumerate functions.
        /// </summary>
        internal static string DLL_FUNCTIONS_ENUM_FAIL {
            get {
                return ResourceManager.GetString("DLL_FUNCTIONS_ENUM_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call stack.
        /// </summary>
        internal static string EXCEPTION_CALLSTACK {
            get {
                return ResourceManager.GetString("EXCEPTION_CALLSTACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string EXCEPTION_MESSAGE {
            get {
                return ResourceManager.GetString("EXCEPTION_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        internal static string EXCEPTION_SOURCE {
            get {
                return ResourceManager.GetString("EXCEPTION_SOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string EXCEPTION_TYPE {
            get {
                return ResourceManager.GetString("EXCEPTION_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to init Application instance. Would You like to check settings?.
        /// </summary>
        internal static string INIT_FAIL_DESCRIPTION {
            get {
                return ResourceManager.GetString("INIT_FAIL_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message code {0} cannot be used to get command line arguments. Use {1}.StringArgsMessageCode or WM_COPYDATA..
        /// </summary>
        internal static string NO_LINK_MESSAGE_CODE {
            get {
                return ResourceManager.GetString("NO_LINK_MESSAGE_CODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        internal static string READY {
            get {
                return ResourceManager.GetString("READY", resourceCulture);
            }
        }
    }
}
