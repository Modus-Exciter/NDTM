<UserControl x:Class="Notung.Feuerzauber.Controls.MdiManager"
             xmlns:controls="clr-namespace:Notung.Feuerzauber.Controls"
             xmlns:converters="clr-namespace:Notung.Feuerzauber.Converters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.DataContext>
        <controls:MdiChildrenPresenter x:Name="Presenter" x:FieldModifier="public"/>
    </UserControl.DataContext>

    <UserControl.Resources>

        <!-- В ресурсы UserControl помещено то, что не является 
        принципиальным для функциональности, просто внешний вид -->

        <LinearGradientBrush x:Key="ActiveBrush"
                             LinearGradientBrush.StartPoint="0.5,0"
                             LinearGradientBrush.EndPoint="0.5,1">
            <GradientStop GradientStop.Color="White" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="Silver" GradientStop.Offset="0.4" />
            <GradientStop GradientStop.Color="LightGray" GradientStop.Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="InactiveBrush"
                             LinearGradientBrush.StartPoint="0.5,0" 
                             LinearGradientBrush.EndPoint="0.5,1">
            <GradientStop GradientStop.Color="Gray" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="DimGray" GradientStop.Offset="1" />
        </LinearGradientBrush>

        <RadialGradientBrush x:Key="HilitedBrush" 
                             RadiusX="1"
                             RadiusY="0.6"
                             GradientOrigin="0.5,0.9">
            <GradientStop GradientStop.Color="Tan" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="#FFBDAA6B" GradientStop.Offset="0.3" />
            <GradientStop GradientStop.Color="DimGray" GradientStop.Offset="1" />
        </RadialGradientBrush>

        <RadialGradientBrush x:Key="HilitedButtonBrush"
                             RadiusX="1"
                             RadiusY="0.6" 
                             GradientOrigin="0.3,0.2">
            <GradientStop GradientStop.Color="Gold" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="Goldenrod" GradientStop.Offset="0.4" />
            <GradientStop GradientStop.Color="Transparent" GradientStop.Offset="1" />
        </RadialGradientBrush>

        <RadialGradientBrush x:Key="PressedButtonBrush" 
                             RadiusX="1" 
                             RadiusY="0.6"
                             GradientOrigin="0.3,0.2">
            <GradientStop GradientStop.Color="Yellow" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="Gold" GradientStop.Offset="0.2" />
            <GradientStop GradientStop.Color="Goldenrod" GradientStop.Offset="0.5" />
            <GradientStop GradientStop.Color="Transparent" GradientStop.Offset="1" />
        </RadialGradientBrush>

        <RadialGradientBrush x:Key="GoldHighlight">
            <GradientStop Color="Gold" Offset="0"/>
            <GradientStop Color="Transparent" Offset="1"/>
        </RadialGradientBrush>

        <RadialGradientBrush x:Key="BronzeHighlight">
            <GradientStop Color="Peru" Offset="0"/>
            <GradientStop Color="Transparent" Offset="1"/>
        </RadialGradientBrush>

        <ControlTemplate TargetType="Button" x:Key="scrollButtonTemplate">
            <Border x:Name="buttonBackground" 
                    CornerRadius="5" 
                    Padding="6,3" 
                    Margin="3"
                    VerticalAlignment="Center"
                    BorderThickness="1"
                    BorderBrush="Transparent" 
                    Background="Transparent">
                <ContentPresenter x:Name="buttonContent"
                                  VerticalAlignment="Center"
                                  TextBlock.FontSize="14"
                                  TextBlock.FontFamily="Courier New"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="buttonBackground" 
                            Property="BorderBrush" 
                            Value="#555555"/>
                    <Setter TargetName="buttonBackground" 
                            Property="Background" 
                            Value="{StaticResource ResourceKey=HilitedButtonBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="buttonBackground" 
                            Property="BorderBrush" 
                            Value="#555555"/>
                    <Setter TargetName="buttonBackground" 
                            Property="Background" 
                            Value="{StaticResource ResourceKey=PressedButtonBrush}"/>
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleY="0.95"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="buttonBackground" 
                            Property="Background" 
                            Value="Transparent"/>
                    <Setter TargetName="buttonBackground" 
                            Property="TextBlock.Foreground" 
                            Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="Button" x:Key="closeButtonTemplate">
            <Border x:Name="buttonBackground" 
                            CornerRadius="7" 
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Padding="5,0"
                            BorderThickness="1"
                            BorderBrush="Transparent"
                            Background="Transparent">
                <ContentPresenter TextBlock.FontFamily="Impact"
                                  TextBlock.FontSize="15"
                                  VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="buttonBackground" 
                            Property="Background" 
                            Value="{StaticResource ResourceKey=GoldHighlight}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="buttonBackground" 
                            Property="Background" 
                            Value="{StaticResource ResourceKey=BronzeHighlight}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ListBox Grid.Row="0"
                 ItemsSource="{Binding Path=MdiChildren}"
                 SelectedItem="{Binding Path=ActiveMdiChild}"
                 Template="{DynamicResource listTemplate}">
            <ListBox.Resources>

                <!--В ресурсы компонента ListBox помещено то, что обеспечивает функционал MDI-приложения -->

                <converters:ImageToBitmapSourceConverter x:Key="imageConverter"/>

                <converters:MathOpertorConverter x:Key="diffConverter"/>

                <ControlTemplate TargetType="ListBoxItem" x:Key="listItemTemplate">
                    <Border x:Name="Border" 
                            Padding="0" 
                            Margin="1.5,0" 
                            CornerRadius="5,5,0,0"
                            BorderThickness="1,1,1,0"
                            BorderBrush="DarkGray"
                            TextBlock.Foreground="White"
                            Background="{DynamicResource InactiveBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="tabIcon"
                                   Source="{Binding Path=Icon, Converter={StaticResource imageConverter}}" 
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   SnapsToDevicePixels="True"
                                   Stretch="Fill" 
                                   Margin="5,5,0,5"
                                   Height="{Binding Path=Icon.Height}" 
                                   Width="{Binding Path=Icon.Width}"/>
                            <TextBlock Text="{Binding Path=Caption}"
                                       Grid.Column="1"
                                       Margin="8"
                                       VerticalAlignment="Center"/>
                            <Button Grid.Column="2"
                                    Template="{StaticResource ResourceKey=closeButtonTemplate}"
                                    VerticalAlignment="Top"
                                    Margin="0"
                                    CommandParameter="{Binding}"
                                    Command="{Binding Path=DataContext.CloseMdiChild, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                                <Button.Content>×</Button.Content>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HilitedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ActiveBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Silver"/>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Black"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Icon}" Value="{x:Null}">
                            <Setter TargetName="tabIcon" Property="Width" Value="0"/>
                            <Setter TargetName="tabIcon" Property="Margin" Value="2"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <ControlTemplate TargetType="ListBox" x:Key="listTemplate">
                    <Grid Background="DimGray">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Button Grid.Column="0" 
                                Template="{DynamicResource scrollButtonTemplate}"
                                Content="◄" 
                                x:Name="leftButton"
                                CommandTarget="{x:Reference Name=innerPart }"
                                Command="ScrollBar.LineLeftCommand" />
                        <ScrollViewer x:Name="innerPart" 
                                      Grid.Column="1"
                                      HorizontalScrollBarVisibility="Hidden">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Button Grid.Column="2" 
                                Template="{DynamicResource scrollButtonTemplate}"
                                Content="►"
                                x:Name="rightButton"
                                CommandTarget="{x:Reference Name=innerPart }" 
                                Command="ScrollBar.LineRightCommand"/>
                        <Border Grid.Row="1" 
                                Grid.ColumnSpan="3" 
                                HorizontalAlignment="Stretch" 
                                Height="3">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="LightGray" Offset="0"/>
                                    <GradientStop Color="Silver" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBox.HasItems" Value="False">
                            <Setter Property="Border.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger SourceName="innerPart" Property="ScrollableWidth" Value="0">
                            <Setter TargetName="leftButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="rightButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="innerPart" Property="Margin" Value="5,0,0,0"/>
                        </Trigger>
                        <Trigger SourceName="innerPart" Property="HorizontalOffset" Value="0">
                            <Setter TargetName="leftButton" Property="IsEnabled" Value="False"/>
                        </Trigger>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource diffConverter}" ConverterParameter="&lt;">
                                    <Binding ElementName="innerPart" Path="HorizontalOffset"/>
                                    <Binding ElementName="innerPart" Path="ScrollableWidth"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="rightButton" Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ListBox.Resources>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel StackPanel.Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template" Value="{DynamicResource ResourceKey=listItemTemplate}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ListBox>
        <ContentControl Grid.Row="1" Content="{Binding Path=ActiveMdiChild.Control}" />
    </Grid>
</UserControl>
