<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ABSTRACT_COMPONENT_TYPE" xml:space="preserve">
    <value>Component type "{0}" is abstract</value>
  </data>
  <data name="BAD_DUPLICATES" xml:space="preserve">
    <value>Unable to find any suitable alternative for duplicates</value>
  </data>
  <data name="CONTEXT_KEY_RESERVED" xml:space="preserve">
    <value>Key '{0}' is reserved</value>
  </data>
  <data name="DUPLICATE_SECTION_NAME" xml:space="preserve">
    <value>Another configuration section {0} already has the same name as {1}</value>
  </data>
  <data name="EMPTY_DEFAULT_LOGGER" xml:space="preserve">
    <value>Default logger cannot be empty or whitespace</value>
  </data>
  <data name="GRAPH_CYCLE" xml:space="preserve">
    <value>Arc cycle detected. Unable to perform topological sort</value>
  </data>
  <data name="GRAPH_MUST_BE_ORIENTED" xml:space="preserve">
    <value>Graph must be oriented for topologogical sort</value>
  </data>
  <data name="IMPOSSIBLE_FIX" xml:space="preserve">
    <value>This collection needs to be be fixed, but it is impossible, because it has fixed size</value>
  </data>
  <data name="INVALID_CONFIG_SECTION_TYPE" xml:space="preserve">
    <value>Configuration section must be a non-abstract class with paramrterless constructor and inherited from Toolbox.Configuration.ConfigurationSection</value>
  </data>
  <data name="INVALID_EVENT_HANDLER" xml:space="preserve">
    <value>Delegate type {0} is not recognized as EventHandler&lt;{1}&gt;</value>
  </data>
  <data name="INVALID_PLUGIN_FILE" xml:space="preserve">
    <value>File {0} is not a correct plugin file</value>
  </data>
  <data name="PLUGIN_NOT_FOUND" xml:space="preserve">
    <value>Assembly {0} specified in plugin file {1} does not exist</value>
  </data>
  <data name="SECTION_TYPE_UNINHERITABLE" xml:space="preserve">
    <value>Unable to save inherited section. Expected type {0}, actual type {1}</value>
  </data>
  <data name="SETTINGS_RESTORE" xml:space="preserve">
    <value>Settings restore started</value>
  </data>
  <data name="STREAM_FLUSH" xml:space="preserve">
    <value>Stream flush</value>
  </data>
  <data name="SUMMARY_ERROR" xml:space="preserve">
    <value>Some critical errors leaded to stop. View detail descripton for all messages to explain</value>
  </data>
  <data name="SUMMARY_INFO" xml:space="preserve">
    <value>These messages contain only information and does not require anithing to do</value>
  </data>
  <data name="SUMMARY_WARNING" xml:space="preserve">
    <value>Read these warnings and fix the problems detected</value>
  </data>
  <data name="THREAD_CONTEXT_MISMATCH" xml:space="preserve">
    <value>Thread context can be edited only in thread where it was created</value>
  </data>
  <data name="UNLOADING_PLUGIN_CURRENT_DOMAIN" xml:space="preserve">
    <value>Unable to unload plugin from the current appliation domain</value>
  </data>
  <data name="UNLOAD_PLUGIN_NO_CONTAINER" xml:space="preserve">
    <value>This plugin was not loaded correctly. It cannot be unloaded</value>
  </data>
  <data name="WRONG_FILE_SYMBOLS" xml:space="preserve">
    <value>File name contains wrong symbols</value>
  </data>
</root>